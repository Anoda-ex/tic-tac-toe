{"version":3,"sources":["Components/Cell.js","Components/WinLine.js","Components/GameArena.js","Components/Score.js","Components/Modal.js","Components/StartGameButton.js","Components/StartModalContent.js","Components/DrawModal.js","App.js","index.js"],"names":["Cell","props","cellType","cell","className","onClick","moveHandler","rowIndex","columnIndex","WinLine","winLinePosition","style","top","left","GameArena","gameArena","map","row","Score","players","player","playerIndex","classList","activePlayer","push","join","name","score","Modal","modalClassList","show","Fragment","close","children","StartGameButton","startGame","StartModalContent","name1","useRef","name2","useEffect","current","value","ref","setPlayerNames","DrawModal","initGameArena","checkGameStatus","playerCellType","i","checkPlayerWin","j","App","useState","setGameArena","setPlayers","playersCellTypes","setPlayersCellTypes","setActivePlayer","setWinLinePosition","stopGame","setStopGame","startModal","setStartModal","gameDraw","setGameDraw","reverse","column","updateGameArena","winData","updatePlayerData","isCanContinueGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.717bb354.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Cell(props) {\r\n    let cellType=null\r\n    if(props.cell==1){\r\n        cellType=<span>&#10006;</span>\r\n    }\r\n    if(props.cell==2){\r\n        cellType=<span>&#9675;</span>\r\n    }\r\n    return (\r\n        <div className=\"cell\" onClick={()=>{props.moveHandler(props.rowIndex,props.columnIndex)}}>\r\n            {cellType}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function WinLine(props) {\r\n    let winLinePosition=props.winLinePosition;\r\n    if(!winLinePosition){\r\n        return null\r\n    }\r\n    if(winLinePosition[0]==\"main-diagonal\"||winLinePosition[0]==\"reverse-diagonal\"){\r\n        return<div className={\"win-line__\"+winLinePosition[0]}></div>\r\n    }\r\n    if(winLinePosition[0]==\"row\"){\r\n        return<div style={{top:(41+winLinePosition[1]*86    )+\"px\"}} className=\"win-line__row\"></div>\r\n    }\r\n    if(winLinePosition[0]==\"column\"){\r\n        return<div style={{left:(35+winLinePosition[1]*83    )+\"px\"}} className=\"win-line__column\"></div>\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Cell from './Cell'\r\nimport WinLine from './WinLine'\r\n\r\nexport default function GameArena(props) {\r\n    return (\r\n        <div className=\"game-arena__wrapper\">\r\n            <WinLine winLinePosition={props.winLinePosition}></WinLine>\r\n            <div className=\"game-arena\">\r\n\r\n                {props.gameArena.map((row,rowIndex)=>{\r\n                    return <div key={rowIndex} className=\"row\">\r\n                        {row.map((cell,columnIndex)=>{\r\n                            return <Cell key={columnIndex} cell={cell} rowIndex={rowIndex} columnIndex={columnIndex} moveHandler={props.moveHandler}></Cell>\r\n                        })}\r\n                        </div>\r\n                })}\r\n            </div>\r\n                \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Score(props) {\r\n    return (\r\n        <div className=\"score\">\r\n            <h1 className=\"score__title\">Score</h1>\r\n            {props.players.map((player,playerIndex)=>{\r\n                let classList=[\"score__data\"]\r\n                if(playerIndex==props.activePlayer){\r\n                    classList.push(\"score__data--active\")\r\n                }\r\n                return  <div key={playerIndex} className={classList.join(\" \")}>{player.name}: {player.score}</div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Modal(props) {\r\n    let modalClassList=[\"modal\"]\r\n    if(props.show){\r\n        modalClassList.push(\"modal--active\")\r\n    }\r\n    return (\r\n        <React.Fragment>  \r\n            {props.show&&<div className=\"backdrop\" onClick={props.close}></div>}\r\n            <div className={modalClassList.join(\" \")}>\r\n                {props.children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function StartGameButton(props) {\r\n    return (\r\n        <button className=\"start-game-button\" onClick={props.startGame}>  \r\n            Start game!\r\n        </button>\r\n    )\r\n}\r\n","import React,{useRef,useEffect} from 'react'\r\nimport Modal from './Modal'\r\nimport StartGameButton from './StartGameButton'\r\nexport default function StartModalContent(props) {\r\n    const name1 = useRef(null)\r\n    const name2 = useRef(null)\r\n    useEffect(() => {\r\n       name1.current.value=props.name1\r\n       name2.current.value=props.name2\r\n    }, [])\r\n    let startGame=()=>{\r\n        props.setPlayerNames(name1.current.value,name2.current.value)\r\n        props.close()\r\n    }\r\n    return (\r\n        <div className=\"start-modal\">\r\n            <div className=\"start-modal__wrapper\">\r\n                Player1 name:<input className=\"start-modal__input\" ref={name1}></input>\r\n            </div> \r\n            <div className=\"start-modal__wrapper\">\r\n                Player2 name:<input className=\"start-modal__input\" ref={name2}></input>\r\n            </div> \r\n            <StartGameButton startGame={startGame}></StartGameButton>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport StartGameButton from './StartGameButton'\r\n\r\nexport default function DrawModal(props) {\r\n    return (\r\n        <div className=\"draw-modal\">\r\n            <div className=\"draw-modal__text\">Draw!!</div>\r\n            <StartGameButton startGame={()=>{props.close();props.startGame()}}></StartGameButton>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React,{useState,useEffect} from \"react\"\nimport GameArena from './Components/GameArena';\nimport Score from './Components/Score';\nimport Modal from \"./Components/Modal\"\nimport StartModalContent from './Components/StartModalContent';\nimport DrawModal from './Components/DrawModal';\nconst initGameArena=[\n  [0,0,0],\n  [0,0,0],\n  [0,0,0]\n]\nlet checkGameStatus=(gameArena,playerCellType)=>{\n  for(let i=0;i<3;i++){\n    let checkPlayerWin=true\n    let j;\n    for(j=0;j<3;j++){\n      checkPlayerWin=checkPlayerWin*(gameArena[i][j]==playerCellType)\n    }\n    if(checkPlayerWin){\n      return [\"row\",i]\n    }\n  } \n  for(let i=0;i<3;i++){\n    let checkPlayerWin=true\n    let j;\n    for(j=0;j<3;j++){\n      checkPlayerWin=checkPlayerWin*(gameArena[j][i]==playerCellType)\n    }\n    if(checkPlayerWin){\n      return [\"column\",i]\n    }\n  }\n  let checkPlayerWin=true\n  for(let i=0;i<3;i++){\n    checkPlayerWin=checkPlayerWin*(gameArena[i][i]==playerCellType)\n  }\n  if(checkPlayerWin){\n    return [\"main-diagonal\"]\n  }\n  checkPlayerWin=true\n  for(let i=0;i<3;i++){\n    checkPlayerWin=checkPlayerWin*(gameArena[2-i][i]==playerCellType)\n  }\n  if(checkPlayerWin){\n    return [\"reverse-diagonal\"]\n  }\n}\n\n\nfunction App() {\n  const [gameArena,setGameArena] = useState(initGameArena)\n  const [players,setPlayers] = useState([{name:\"player1\",score:0},{name:\"player2\",score:0}])\n  const [playersCellTypes,setPlayersCellTypes] = useState([1,2])\n  const [activePlayer,setActivePlayer] = useState(0)\n  const [winLinePosition,setWinLinePosition] = useState(null)\n  const [stopGame,setStopGame]=useState(false)\n  const [startModal,setStartModal]=useState(false)\n  const [gameDraw,setGameDraw]=useState(false)\n  useEffect(() => {\n    setStartModal(true)\n  }, [])\n\n\n  let moveHandler=(row,column)=>{\n    let updateGameArena=[[...gameArena[0]],[...gameArena[1]],[...gameArena[2]]]\n    while(!updateGameArena[row][column] && !stopGame){\n      updateGameArena[row][column]=playersCellTypes[activePlayer]\n      let winData=checkGameStatus(updateGameArena,playersCellTypes[activePlayer])\n      if(winData){\n        let updatePlayerData=[...players]\n        updatePlayerData[activePlayer].score+=1\n        setWinLinePosition(winData)\n        setPlayers(updatePlayerData)\n        setGameArena(updateGameArena)\n        setActivePlayer(activePlayer?0:1)\n        setStopGame(true)\n      }else{\n        let isCanContinueGame=false\n        for(let i of updateGameArena){\n          for(let j of i){\n            if(!j){\n              isCanContinueGame=true\n            }\n          }\n        }\n        if(!isCanContinueGame){\n          setGameDraw(true)\n        }\n        if(updateGameArena)\n        setGameArena(updateGameArena)\n        setActivePlayer(activePlayer?0:1)\n      }\n\n\n    }\n\n  }\n  let startGame=()=>{\n    setGameArena(initGameArena)\n    setPlayersCellTypes([...playersCellTypes].reverse())\n    setActivePlayer(activePlayer?0:1)\n    setStopGame(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <GameArena gameArena={gameArena} moveHandler={moveHandler} winLinePosition={winLinePosition}></GameArena>\n      <Score players={players} activePlayer={activePlayer}></Score>\n      <Modal show={startModal} close={()=>{setStartModal(false)}}>\n          <StartModalContent\n            name1={players[0].name}\n            name2={players[1].name}\n            setPlayerNames={(name1,name2)=>{setPlayers([{name:name1,score:0},{name:name2,score:0}])}}\n            startGame={startGame}\n            close={()=>{setStartModal(false)}}>\n            \n          </StartModalContent>\n      </Modal>\n      <Modal show={gameDraw} close={()=>{setGameDraw(false)}}>\n          <DrawModal\n            close={()=>{setGameDraw(false)}}\n            startGame={startGame}  >\n          </DrawModal>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}